Assistant, please overwrite our existing top‐bar search component (`SearchBar.jsx` and related styles) to deliver a truly “smart” search experience with polished UI/UX—including an intuitive, accessible dropdown. No extra features—just refine the search flow and dropdown styling:

---

## 1. Smart Search Behavior  
- **Debounce & Query**: On user input, debounce 300 ms then call `/api/search?q=…`.  
- **Multi‑Type Results**: API returns up to 5 items each from Products, Customers, Orders, grouped by category.  
- **Highlight Matches**: In the dropdown, highlight the matching text within each result label in bold or primary color.  

## 2. Dropdown UI & Interaction  
- **Positioning**:  
  - Absolute positioned below the search input, full width (or max-width of the input), with `mt-2 z-50`.  
  - Light background `bg-white dark:bg-[#1F1F1F]`, border `border border-gray-200 dark:border-gray-700`, rounded corners, `shadow-lg`.  
- **Grouping**:  
  - Display category headers (“Products”, “Customers”, “Orders”) in `text-xs uppercase text-gray-500 dark:text-gray-400 px-4 pt-2`.  
  - Under each header, list matching items.  
- **List Items**:  
  - Each item is `px-4 py-2 flex items-center hover:bg-primaryGreen-light dark:hover:bg-primaryGreen-dark cursor-pointer transition`.  
  - Icon on left (e.g. product icon, user icon, order icon), label text next.  
- **Keyboard Navigation**:  
  - Support Arrow Up/Down to move focus between items, Enter to select, Esc to close.  
  - Focused item uses `bg-primaryGreen text-white` (dark mode `dark:bg-primaryGreen-light`).  

## 3. Selection & Navigation  
- On click or Enter, navigate to the appropriate detail route:  
  - Products → `/inventory/:id`  
  - Customers → `/customers/:id`  
  - Orders → `/orders/:id`  
- After selection, clear the dropdown and populate the input with the chosen label (optional: clear input).

## 4. Accessibility & Edge Cases  
- Add `role="combobox"` on the input and `role="listbox"` on the dropdown, with `aria-activedescendant` for the focused item.  
- If no results, show a friendly “No matches found” item in `italic text-gray-500`.  
- Clicking outside closes the dropdown (`useOutsideClick` hook).

## 5. QA Checklist  
- [ ] Typing triggers debounced API calls and shows grouped results.  
- [ ] Matching substrings are highlighted.  
- [ ] Dropdown styling matches theme and is responsive on mobile.  
- [ ] Arrow keys navigate items; Enter selects; Esc closes.  
- [ ] Clicking an item navigates correctly and resets state.  
- [ ] No-results state appears.  
- [ ] Dark mode styles applied to dropdown and highlights.

Generate the complete `SearchBar.jsx` component code—including React hooks, debouncing, fetch logic, dropdown markup, keyboard handlers—and the Tailwind classes needed to implement this refined smart search UI/UX.```
