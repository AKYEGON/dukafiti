CRITICAL DISCOVERY: FUNDAMENTAL DATA STRUCTURE MISMATCH

I've found the root cause of the authentication failure. Here's the detailed analysis:

FINDINGS
1. Password Field Mismatch (PRIMARY ISSUE)
Login route: Attempts to access user.password (line 144)
Registration route: Stores password as password field (line 105)
Storage creation: User type expects passwordHash field, not password
2. Registration Data Structure Issue
// Registration stores:
const userData = {
  password: hash,  // ❌ WRONG FIELD NAME
}
// But login expects:
await bcrypt.compare(password, user.password);  // ❌ FIELD DOESN'T EXIST
3. User Schema Inconsistency
The User type from schema likely expects passwordHash but code uses password.

EVIDENCE FROM LOGS
3:48:05 PM [express] POST /api/login 401 in 99ms :: {"message":"Invalid credentials"}
This confirms authentication fails because user.password is undefined, making bcrypt.compare() fail.

VERIFICATION TEST

Opened shared/schema.ts

Searched for "Find the users table schema definition to verify the password field name"
COMPLETE DIAGNOSIS CONFIRMED
ROOT CAUSE IDENTIFIED: Field name mismatch between registration and login processes.

The Schema Truth:
// Schema definition (shared/schema.ts):
export const users = pgTable("users", {
  passwordHash: text("password_hash").notNull(),  // ✅ CORRECT FIELD
});
The Registration Bug:
// Registration (server/routes.ts line 105):
const userData = {
  password: hash,  // ❌ WRONG - should be 'passwordHash'
}
The Login Bug:
// Login (server/routes.ts line 144):
const isValidPassword = await bcrypt.compare(password, user.password);  // ❌ WRONG - should be 'user.passwordHash'
Step 6: Confirm Storage Layer Issue

Opened server/storage.ts
FINAL DIAGNOSIS - COMPREHENSIVE AUTHENTICATION FAILURE
CRITICAL BUGS IDENTIFIED:
Registration Bug (server/routes.ts:105)

password: hash,  // ❌ Should be: passwordHash: hash
Login Bug (server/routes.ts:144)

user.password  // ❌ Should be: user.passwordHash
MemStorage Default User Bug (server/storage.ts:124)

password: "admin123",  // ❌ Should be: passwordHash: hashedPassword
EVIDENCE CHAIN:
✅ Server logs show: "Invalid credentials" - confirms authentication failure
✅ Schema defines: passwordHash field, not password
✅ Registration stores data in wrong field name
✅ Login reads from wrong field name (undefined)
✅ bcrypt.compare() fails due to undefined password field
✅ User remains stuck on login page after "successful" login
WHY THE BLANK PAGE OCCURS:
After login fails, the Router component detects the user is not authenticated and:

Tries to redirect using setLocation('/login')
But user is already on /login
Results in blank page state between route transitions
The authentication flow has THREE SEPARATE BUGS that must all be fixed simultaneously to restore functionality.