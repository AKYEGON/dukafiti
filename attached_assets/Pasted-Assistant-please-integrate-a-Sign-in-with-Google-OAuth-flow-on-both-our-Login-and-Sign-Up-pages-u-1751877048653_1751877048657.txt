Assistant, please integrate a “Sign in with Google” OAuth flow on both our Login and Sign‑Up pages using Supabase Auth. Add a single, unified Google button that handles both registering and logging in. Overwrite or update as follows:

---

## 1. Supabase OAuth Setup  
- In the Supabase dashboard under **Authentication → Settings → External OAuth Providers**, enable **Google** and set your Google client ID/secret.  
- Add your app’s callback URL (`https://<your‑app>.vercel.app`) to the Google OAuth console.

## 2. UI: Google Button  
- In `Login.jsx` and `SignUp.jsx`, below the primary form button, add:
  ```jsx
  <button
    onClick={handleGoogleAuth}
    className="mt-4 w-full flex items-center justify-center py-2 border border-gray-300 rounded-md hover:bg-gray-100 dark:border-gray-600 dark:hover:bg-gray-700"
    aria-label="Sign in with Google"
  >
    <img src="/assets/google-icon.svg" alt="Google" className="h-6 w-6 mr-2" />
    <span className="font-semibold text-gray-700 dark:text-gray-200">
      Continue with Google
    </span>
  </button>
Use your existing Tailwind theme for spacing and hover effects.

3. OAuth Handler Function
In a shared auth utility (e.g. src/utils/auth.js), add:

js
Copy
Edit
import { supabase } from '../supabaseClient';

export function handleGoogleAuth() {
  supabase.auth.signInWithOAuth({
    provider: 'google',
    options: { redirectTo: window.location.origin + '/dashboard' }
  });
}
Import and wire handleGoogleAuth into both pages’ onClick.

4. Post-Auth Redirect & Session
Ensure in your app initialization (e.g. App.jsx) you call:

js
Copy
Edit
supabase.auth.getSessionFromUrl({ storeSession: true })
  .then(({ data, error }) => {
    if (data.session) navigate('/dashboard');
  });
This handles the OAuth callback and session storage before redirect.

5. QA Checklist
 Google button appears on both Login and Sign‑Up pages, styled consistently.

 Clicking it opens Google’s OAuth consent screen.

 After successful Google sign‑in, users land on /dashboard and are authenticated.

 No errors thrown in the console during OAuth flow.

Implement these changes so users can “Continue with Google” as an alternative to email/password.```








Ask ChatGPT
