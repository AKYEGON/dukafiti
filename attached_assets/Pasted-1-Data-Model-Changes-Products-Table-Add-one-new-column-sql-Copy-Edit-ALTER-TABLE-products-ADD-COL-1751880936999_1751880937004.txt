1. Data Model Changes
Products Table
Add one new column:

sql
Copy
Edit
ALTER TABLE products
ADD COLUMN cost_price numeric NOT NULL DEFAULT 0 CHECK (cost_price >= 0);
Validation: On the client, cost price must be ≥ 0 and < selling price.

Sales Table
Ensure each sale line stores cost info at time of sale (to guard against later cost changes):

sql
Copy
Edit
ALTER TABLE sale_items
ADD COLUMN cost_price_at_sale numeric NOT NULL;
2. Profit Calculation Logic
Per‑Sale Profit

js
Copy
Edit
profit = (selling_price - cost_price_at_sale) * quantity;
Daily / Period Totals

Daily: Sum all profit for sales where date = today.

Weekly/Monthly: Same, with date filters.

Margins

% margin = (selling_price - cost_price_at_sale) / selling_price × 100.

3. REST Endpoints
GET /api/profits?period=daily|weekly|monthly

Returns { totalProfit, marginPercent, byProduct: [...], byCategory: [...] }.

POST /api/restock

json
Copy
Edit
{ productId, quantity, supplier?, note? }
Increases products.quantity by quantity.

Returns updated product record.

GET /api/restock?period=today|week|month

Returns list of restocks for reporting (optional).

4. UI/UX Flows
A. Profit Dashboard (new nav item “Profits”)
Top Summary Cards

Today’s Profit (KES X)

This Week

Margin % (overall)

Charts

Line chart of daily profit over past 7 days.

Bar chart of top 5 profitable products this month.

Table

Columns: Product, Qty Sold, Profit, Margin %.

Sortable by any column.

Minimal Controls

Period selector dropdown (Today / 7 Days / 30 Days)

“Export CSV” button.

B. Restock Flow (under Inventory)
Restock Button on Product Card

Opens a small modal:

Qty to add (number)

Supplier (optional text)

Save / Cancel

After Save

Quantity updates instantly on card.

Toast “Restocked 10 cups of Beans.”

Restock History (optional small link)

Under Inventory nav, “View Restock History” opens a simple list: Date, Product, Qty, Supplier.

5. Minimal UX Principles
One‑Click Actions: Restock modal is two fields + one button.

Immediate Feedback: Toasts for both profit and restock actions.

Clean Layout: Use existing card/grid structures—no new page clutter.

Consistent Styling: Reuse your green/black/purple palette and card designs.

6. Implementation Checklist
 Database migration for cost_price and cost_price_at_sale.

 Update sale ingest logic to capture cost_price_at_sale.

 Create /api/profits endpoint with aggregates.

 Create /api/restock endpoint and hook into Inventory UI.

 Build the Profit Dashboard UI (cards + charts + table).

 Add “Restock” modal to each product card.

 Test profit calculations against known data.

 Validate restock updates persist and reflect in UI.

With just these eight steps, you’ll give dukawalas clear profit visibility and an easy restocking experience—no fluff, just business‑critical features.